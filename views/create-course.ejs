<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create a new course</title>
    <link rel="stylesheet" href="/css/main.css" />
    <style>
      /* Create Course Form Specific Styles */
      .create-course-container {
        max-width: 800px;
        margin: 40px auto;
        padding: 0 20px;
      }

      .create-course-header {
        text-align: center;
        margin-bottom: 40px;
      }

      .create-course-header h1 {
        font-size: 2.5rem;
        color: var(--primary-dark);
        margin-bottom: 12px;
        font-weight: 700;
      }

      .create-course-header p {
        color: var(--text-light);
        font-size: 1.1rem;
        margin: 0;
      }

      .create-course-form {
        background: var(--white);
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        padding: 40px;
        border: 1px solid var(--border-light);
      }

      .form-section {
        margin-bottom: 32px;
        padding-bottom: 24px;
        border-bottom: 1px solid var(--border-light);
      }

      .form-section:last-child {
        border-bottom: none;
        margin-bottom: 0;
      }

      .form-section h3 {
        color: var(--primary-dark);
        font-size: 1.4rem;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 8px;
        border-bottom: 2px solid var(--primary-light);
        display: inline-block;
      }

      .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 20px;
      }

      .form-row.full-width {
        grid-template-columns: 1fr;
      }

      .form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
      }

      .form-group label {
        font-weight: 600;
        color: var(--text-dark);
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 6px;
      }

      .form-group label i {
        color: var(--primary-light);
        font-size: 12px;
      }

      .form-group input,
      .form-group textarea,
      .form-group select {
        padding: 12px 16px;
        border: 2px solid var(--border-light);
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: var(--white);
        font-family: inherit;
      }

      .form-group input:focus,
      .form-group textarea:focus,
      .form-group select:focus {
        outline: none;
        border-color: var(--primary-light);
        box-shadow: 0 0 0 3px rgba(186, 28, 130, 0.1);
        transform: translateY(-1px);
      }

      .form-group textarea {
        resize: vertical;
        min-height: 120px;
      }

      .form-group input[type="file"] {
        padding: 8px;
        border: 2px dashed var(--border-light);
        background: var(--gray-light);
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .form-group input[type="file"]:hover {
        border-color: var(--primary-light);
        background: rgba(186, 28, 130, 0.05);
      }

      .form-group small {
        color: var(--text-light);
        font-size: 12px;
        margin-top: 4px;
      }

      /* Quill Editor Styling */
      .quill-container {
        border: 2px solid var(--border-light);
        border-radius: 8px;
        overflow: hidden;
        transition: border-color 0.3s ease;
      }

      .quill-container:focus-within {
        border-color: var(--primary-light);
        box-shadow: 0 0 0 3px rgba(186, 28, 130, 0.1);
      }

      /* Dynamic Sections Styling */
      .sections-container {
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-top: 16px;
        background: var(--gray-light);
      }

      .section {
        background: var(--white);
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 16px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      }

      .section h4 {
        color: var(--primary-dark);
        font-size: 16px;
        font-weight: 600;
        margin: 0 0 16px 0;
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .section h4 i {
        color: var(--primary-light);
      }

      .lessons-container {
        margin-top: 16px;
      }

      .lesson {
        background: var(--gray-light);
        border: 1px solid var(--border-light);
        border-radius: 6px;
        padding: 16px;
        margin-bottom: 12px;
        position: relative;
      }

      .lesson-video-upload {
        margin-top: 12px;
        padding: 12px;
        background: var(--white);
        border-radius: 6px;
        border: 1px solid var(--border-light);
      }

      .lesson-video-upload label {
        font-size: 12px;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 8px;
        display: block;
      }

      .lesson-video-upload-btn {
        background: var(--primary-light);
        color: var(--white);
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
      }

      .lesson-video-upload-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-1px);
      }

      .lesson-video-progress {
        font-size: 12px;
        color: var(--primary-light);
        margin-left: 8px;
      }

      .lesson-video-preview {
        margin-top: 8px;
        padding: 8px;
        background: var(--gray-light);
        border-radius: 4px;
        min-height: 40px;
        display: flex;
        align-items: center;
      }

      .lesson-video-preview video {
        max-width: 180px;
        max-height: 100px;
        border-radius: 4px;
      }

      .remove-lesson-btn {
        position: absolute;
        top: 8px;
        right: 8px;
        background: #dc3545;
        color: var(--white);
        border: none;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
      }

      .remove-lesson-btn:hover {
        background: #c82333;
        transform: scale(1.1);
      }

      /* Gallery Items Styling */
      .gallery-container {
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-top: 16px;
        background: var(--gray-light);
      }

      .gallery-item {
        background: var(--white);
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 16px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      }

      /* Resources container styling */
      .resources-container {
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-top: 16px;
        background: var(--gray-light);
      }

      .resource-item {
        background: var(--white);
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 16px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      }

      .resource-item .form-row {
        margin-bottom: 16px;
      }

      .resource-preview {
        margin-top: 12px;
        padding: 12px;
        background: var(--gray-light);
        border-radius: 6px;
        border: 1px solid var(--border-light);
      }

      .resource-preview .file-info {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        color: var(--text-dark);
      }

      .resource-preview .file-info i {
        color: var(--primary-light);
      }

      .remove-resource-btn {
        position: absolute;
        top: 12px;
        right: 12px;
        background: #ff4757;
        color: white;
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        transition: all 0.3s ease;
      }

      .remove-resource-btn:hover {
        background: #ff3742;
        transform: scale(1.1);
      }

      /* Button Styling */
      .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
      }

      .btn-primary {
        background: var(--primary-light);
        color: var(--white);
      }

      .btn-primary:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(186, 28, 130, 0.3);
      }

      .btn-secondary {
        background: var(--gray-light);
        color: var(--text-dark);
        border: 1px solid var(--border-light);
      }

      .btn-secondary:hover {
        background: var(--border-light);
        transform: translateY(-1px);
      }

      .btn-danger {
        background: #dc3545;
        color: var(--white);
      }

      .btn-danger:hover {
        background: #c82333;
        transform: translateY(-1px);
      }

      .btn-small {
        padding: 8px 16px;
        font-size: 12px;
      }

      .form-actions {
        display: flex;
        gap: 16px;
        justify-content: center;
        margin-top: 40px;
        padding-top: 24px;
        border-top: 1px solid var(--border-light);
      }

      .navigation-links {
        text-align: center;
        margin-top: 24px;
        padding-top: 24px;
        border-top: 1px solid var(--border-light);
      }

      .navigation-links a {
        color: var(--primary-light);
        text-decoration: none;
        font-weight: 500;
        margin: 0 12px;
        transition: color 0.3s ease;
      }

      .navigation-links a:hover {
        color: var(--primary-dark);
        text-decoration: underline;
      }

      /* Message Styling */
      .message {
        padding: 12px 16px;
        border-radius: 8px;
        margin-bottom: 24px;
        font-weight: 500;
        text-align: center;
      }

      .message.success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
      }

      .message.error {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .create-course-container {
          margin: 20px auto;
          padding: 0 16px;
        }

        .create-course-form {
          padding: 24px;
        }

        .create-course-header h1 {
          font-size: 2rem;
        }

        .form-row {
          grid-template-columns: 1fr;
          gap: 16px;
        }

        .form-actions {
          flex-direction: column;
        }

        .btn {
          width: 100%;
          justify-content: center;
        }
      }

      @media (max-width: 480px) {
        .create-course-form {
          padding: 20px;
        }

        .create-course-header h1 {
          font-size: 1.8rem;
        }

        .form-section h3 {
          font-size: 1.2rem;
        }
      }
    </style>
  </head>
  <body>
    <%- include('partials/navbar') %>
    
    <div class="create-course-container">
      <div class="create-course-header">
        <h1><i class="fas fa-plus-circle"></i> Create New Course</h1>
        <p>Fill in the details below to create a new course for your platform</p>
      </div>

      <% if (message) { %>
        <div class="message <%= message.includes('success') ? 'success' : 'error' %>">
          <%= message %>
        </div>
      <% } %>

      <form class="create-course-form" enctype="multipart/form-data" action="/admin-page/courses/new" method="post">
        
        <!-- Basic Information Section -->
        <div class="form-section">
          <h3><i class="fas fa-info-circle"></i> Basic Information</h3>
          
          <div class="form-group">
            <label for="course-title"><i class="fas fa-heading"></i> Course Title</label>
            <input type="text" name="title" id="course-title" placeholder="Enter course title" required />
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="course-category"><i class="fas fa-tags"></i> Category</label>
              <select id="course-category" name="category" onchange="toggleNewCategoryInput()">
                <option value="">-- Select or Create a Category --</option>
                <% categories.forEach(category => { %>
                <option value="<%= category %>"><%= category %></option>
                <% }) %>
                <option value="new">-- Create New Category --</option>
              </select>
            </div>

            <div class="form-group">
              <label for="course-price"><i class="fas fa-dollar-sign"></i> Course Price</label>
              <input type="number" name="price" id="course-price" placeholder="0.00" step="0.01" required />
            </div>
          </div>

          <div id="newCategoryInput" style="display: none;">
            <div class="form-group">
              <label for="newCategoryName"><i class="fas fa-plus"></i> New Category Name</label>
              <input type="text" id="newCategoryName" name="newCategoryName" placeholder="Enter new category name" />
            </div>
          </div>
        </div>

        <!-- Media Section -->
        <div class="form-section">
          <h3><i class="fas fa-image"></i> Media & Content</h3>
          
          <div class="form-group">
            <label for="courseThumbnail"><i class="fas fa-upload"></i> Course Thumbnail</label>
            <input type="file" name="courseThumbnail" id="courseThumbnail" accept="image/*" />
            <small>Upload a high-quality image for your course (recommended: 800x600px)</small>
          </div>

          <div class="form-group">
            <label for="course-description"><i class="fas fa-align-left"></i> Course Description</label>
            <textarea name="description" id="course-description" placeholder="Write a compelling description of your course..." required></textarea>
          </div>
          
          <div class="form-group">
            <label for="quill-editor"><i class="fas fa-edit"></i> Course Contents (Rich Text)</label>
            <div class="quill-container">
              <div id="quill-editor" style="height: 250px;"></div>
            </div>
            <input type="hidden" name="courseContents" id="courseContents">
          </div>

          <div class="form-group">
            <label for="course-introVideoUrl"><i class="fas fa-video"></i> Course Intro Video URL</label>
            <input type="text" name="introVideoID" id="course-introVideoUrl" placeholder="Enter video URL or ID" required />
            <small>Paste the video URL or ID from your video platform</small>
          </div>
        </div>

        <!-- Course Details Section -->
        <div class="form-section">
          <h3><i class="fas fa-chart-bar"></i> Course Details</h3>
          
          <div class="form-row">
            <div class="form-group">
              <label for="course-totalHours"><i class="fas fa-clock"></i> Total Hours</label>
              <input type="number" name="totalHours" id="course-totalHours" placeholder="0" min="0" step="0.5" required />
            </div>
            
            <div class="form-group">
              <label for="course-topicsCovered"><i class="fas fa-list"></i> Topics Covered</label>
              <input type="number" name="topicsCovered" id="course-topicsCovered" placeholder="0" min="0" required />
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="course-numOfProjects"><i class="fas fa-project-diagram"></i> Number of Projects</label>
              <input type="number" name="numOfProjects" id="course-numOfProjects" placeholder="0" min="0" required />
            </div>
            
            <div class="form-group">
              <label for="course-sizeGb"><i class="fas fa-hdd"></i> Course Size (GB)</label>
              <input type="number" name="sizeGb" id="course-sizeGb" placeholder="0" min="0" step="0.1" required />
            </div>
          </div>

          <div class="form-group">
            <label for="course-numberOfLessonsManual"><i class="fas fa-play-circle"></i> Number of Video Lessons</label>
            <input type="number" name="numberOfLessonsManual" id="course-numberOfLessonsManual" placeholder="0" min="0" required />
          </div>
        </div>

        <!-- Lesson Sections -->
        <div class="form-section">
          <h3><i class="fas fa-layer-group"></i> Course Structure</h3>
          
          <div class="sections-container">
            <div id="lessonSectionsContainer"></div>
            <button type="button" id="addSectionBtn" class="btn btn-secondary btn-small">
              <i class="fas fa-plus"></i> Add Lesson Section
            </button>
          </div>
        </div>

        <!-- Gallery Section -->
        <div class="form-section">
          <h3><i class="fas fa-images"></i> Gallery Items</h3>
          
          <div class="gallery-container">
            <div id="galleryItemsContainer"></div>
            <button type="button" id="addGalleryItemBtn" class="btn btn-secondary btn-small">
              <i class="fas fa-plus"></i> Add Image or Video
            </button>
          </div>
        </div>

        <!-- Course Resources Section -->
        <div class="form-section">
          <h3><i class="fas fa-file-archive"></i> Course Resources</h3>
          <p style="color: var(--text-light); margin-bottom: 20px;">Upload project files, source code, assets, or any additional materials for your students</p>
          
          <div class="resources-container">
            <div id="resourcesItemsContainer"></div>
            <button type="button" id="addResourceItemBtn" class="btn btn-secondary btn-small">
              <i class="fas fa-plus"></i> Add Resource File
            </button>
          </div>
        </div>

        <!-- Form Actions -->
        <div class="form-actions">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-save"></i> Create Course
          </button>
          <a href="/admin-page" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Cancel
          </a>
        </div>
      </form>

      <div class="navigation-links">
        <a href="/admin-page"><i class="fas fa-tachometer-alt"></i> Back to Admin Dashboard</a>
        <a href="/"><i class="fas fa-home"></i> Go to Homepage</a>
      </div>
    </div>

    <%- include('partials/footer') %>

    <!-- JAVASCRIPT -->
    <!-- Quill CSS & JS (CDN) -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
      // Category dropdown and new category functionality
      const toggleNewCategoryInput = () => {
        const categorySelect = document.getElementById("course-category");
        const newCategoryInputDiv = document.getElementById("newCategoryInput");
        const newCategoryNameInput = document.getElementById("newCategoryName");

        if (categorySelect.value === "new") {
          newCategoryInputDiv.style.display = "block";
          newCategoryNameInput.setAttribute("name", "category");
          newCategoryNameInput.setAttribute("required", "required");
          categorySelect.removeAttribute("name");
        } else {
          newCategoryInputDiv.style.display = "none";
          newCategoryNameInput.removeAttribute("name");
          newCategoryNameInput.removeAttribute("required");
          categorySelect.setAttribute("name", "category");
        }
      };

      // Ensure correct state on page load
      document.addEventListener("DOMContentLoaded", toggleNewCategoryInput);

      // Lesson sections and lesson titles handler
      const lessonSectionsContainer = document.getElementById("lessonSectionsContainer");
      const addSectionBtn = document.getElementById("addSectionBtn");
      let sectionCount = 0;

      addSectionBtn.addEventListener("click", () => {
        const currentSectionIndex = sectionCount;
        const sectionDiv = document.createElement("div");
        sectionDiv.classList.add("section");
        sectionDiv.dataset.index = sectionCount;
        sectionDiv.innerHTML = `
          <h4><i class="fas fa-layer-group"></i> Section ${currentSectionIndex + 1}</h4>
          <div class="form-group">
            <label for="section-${currentSectionIndex}">Section Title</label>
            <input type='text' id="section-${currentSectionIndex}" name="sections[${currentSectionIndex}][sectionTitle]" placeholder="Enter section title" required>
          </div>
          <div class="lessons-container"></div>
          <button type="button" class="addLessonBtn btn btn-secondary btn-small">
            <i class="fas fa-plus"></i> Add Lesson
          </button>
        `;
        lessonSectionsContainer.appendChild(sectionDiv);
        
        const lessonsContainer = sectionDiv.querySelector('.lessons-container');
        let lessonCount = 0;
        
        sectionDiv.querySelector('.addLessonBtn').addEventListener('click', () => {
          const currentLessonIndex = lessonCount;
          const lessonDiv = document.createElement('div');
          lessonDiv.classList.add('lesson');
          lessonDiv.innerHTML = `
            <div class="form-group">
              <label>Lesson Title</label>
              <input type="text" name="sections[${currentSectionIndex}][lessons][${currentLessonIndex}][title]" placeholder="Enter lesson title" required />
            </div>
            <div class="lesson-video-upload">
              <label>Video Upload</label>
              <input type="file" accept="video/*" class="lesson-video-input" style="display:none;" />
              <button type="button" class="lesson-video-upload-btn">Upload Video</button>
              <span class="lesson-video-progress" style="display:none;"></span>
              <input type="hidden" name="sections[${currentSectionIndex}][lessons][${currentLessonIndex}][videoUrl]" class="lesson-video-url" />
              <div class="lesson-video-preview"><span style="color:#888;">No video uploaded</span></div>
            </div>
            <button type="button" class="remove-lesson-btn" title="Remove lesson">
              <i class="fas fa-times"></i>
            </button>
          `;
          lessonsContainer.appendChild(lessonDiv);
          
          // Remove lesson logic
          lessonDiv.querySelector('.remove-lesson-btn').onclick = function() {
            lessonDiv.remove();
          };
          
          // Video upload logic
          const videoInput = lessonDiv.querySelector('.lesson-video-input');
          const uploadBtn = lessonDiv.querySelector('.lesson-video-upload-btn');
          const progressSpan = lessonDiv.querySelector('.lesson-video-progress');
          const videoUrlInput = lessonDiv.querySelector('.lesson-video-url');
          const previewDiv = lessonDiv.querySelector('.lesson-video-preview');
          
          uploadBtn.onclick = () => videoInput.click();
          videoInput.onchange = function() {
            if (videoInput.files.length > 0) {
              const file = videoInput.files[0];
              const formData = new FormData();
              formData.append('video', file);
              progressSpan.style.display = 'inline';
              progressSpan.textContent = 'Uploading...';
              
              fetch(`/admin-page/lessons/upload-video`, {
                method: 'POST',
                body: formData
              }).then(res => res.json())
                .then(data => {
                  if (data.success) {
                    videoUrlInput.value = data.url;
                    previewDiv.innerHTML = `<video src="${data.url}" controls style="max-width:180px;max-height:100px;"></video>`;
                    progressSpan.textContent = 'Uploaded successfully!';
                  } else {
                    progressSpan.textContent = 'Upload failed.';
                  }
                  setTimeout(() => { progressSpan.style.display = 'none'; }, 2000);
                })
                .catch(() => {
                  progressSpan.textContent = 'Upload failed.';
                  setTimeout(() => { progressSpan.style.display = 'none'; }, 2000);
                });
            }
          };
          lessonCount++;
        });
        sectionCount++;
      });

      // Gallery items handler
      let galleryItemCount = 0;

      document.getElementById("addGalleryItemBtn").addEventListener("click", () => {
        const container = document.getElementById("galleryItemsContainer");
        const html = `
          <div class="gallery-item">
            <div class="form-row">
              <div class="form-group">
                <label for="galleryFile-${galleryItemCount}"><i class="fas fa-upload"></i> Media File</label>
                <input type="file" name="galleryFiles" id="galleryFile-${galleryItemCount}" accept="image/*,video/*" required />
              </div>
              <div class="form-group">
                <label for="galleryType-${galleryItemCount}"><i class="fas fa-tag"></i> Media Type</label>
                <select name="galleryTypes" id="galleryType-${galleryItemCount}">
                  <option value="image">Image</option>
                  <option value="video">Video</option>
                </select>
              </div>
            </div>
            <div class="form-group">
              <label for="galleryCaption-${galleryItemCount}"><i class="fas fa-comment"></i> Caption (Optional)</label>
              <input type="text" name="galleryCaptions" id="galleryCaption-${galleryItemCount}" placeholder="Enter optional caption..." />
            </div>
          </div>
        `;
        container.insertAdjacentHTML('beforeend', html);
        galleryItemCount++;
      });

      // Resources items handler
      let resourceItemCount = 0;

      document.getElementById("addResourceItemBtn").addEventListener("click", () => {
        const container = document.getElementById("resourcesItemsContainer");
        const currentResourceIndex = resourceItemCount;
        const html = `
          <div class="resource-item" style="position: relative;">
            <button type="button" class="remove-resource-btn" title="Remove resource">
              <i class="fas fa-times"></i>
            </button>
            <div class="form-row">
              <div class="form-group">
                <label for="resourceFile-${currentResourceIndex}"><i class="fas fa-upload"></i> Resource File</label>
                <input type="file" name="resourceFiles" id="resourceFile-${currentResourceIndex}" accept=".zip,.rar,.7z,.pdf,.doc,.docx,.txt,.blend,.fbx,.obj,.max,.c4d,.psd,.ai,.sketch,.fig,.xd,.html,.css,.js,.py,.java,.cpp,.c,.php,.sql,.json,.xml,.md,.rtf,.odt,.ods,.odp,.xls,.xlsx,.ppt,.pptx" required />
                <small>Accepted formats: ZIP, RAR, PDF, documents, design files, code files, etc. (Max size: 1GB)</small>
              </div>
              <div class="form-group">
                <label for="resourceDescription-${currentResourceIndex}"><i class="fas fa-comment"></i> Description (Optional)</label>
                <input type="text" name="resourceDescriptions" id="resourceDescription-${currentResourceIndex}" placeholder="e.g., Project source files, Assets pack, etc." />
              </div>
            </div>
            <div class="resource-preview" style="display: none;">
              <div class="file-info">
                <i class="fas fa-file"></i>
                <span class="file-name"></span>
                <span class="file-size"></span>
              </div>
            </div>
            <input type="hidden" name="resourceUrls" class="resource-url" />
            <input type="hidden" name="resourceFileNames" class="resource-filename" />
            <input type="hidden" name="resourceFileSizes" class="resource-filesize" />
            <input type="hidden" name="resourceFileTypes" class="resource-filetype" />
            <input type="hidden" name="resourceOriginalNames" class="resource-originalname" />
          </div>
        `;
        container.insertAdjacentHTML('beforeend', html);
        
        // Remove resource logic
        const resourceItem = container.lastElementChild;
        resourceItem.querySelector('.remove-resource-btn').onclick = function() {
          resourceItem.remove();
        };
        
        // File upload logic
        const fileInput = resourceItem.querySelector('input[type="file"]');
        const previewDiv = resourceItem.querySelector('.resource-preview');
        const fileNameSpan = resourceItem.querySelector('.file-name');
        const fileSizeSpan = resourceItem.querySelector('.file-size');
        const urlInput = resourceItem.querySelector('.resource-url');
        const filenameInput = resourceItem.querySelector('.resource-filename');
        const filesizeInput = resourceItem.querySelector('.resource-filesize');
        const filetypeInput = resourceItem.querySelector('.resource-filetype');
        const originalnameInput = resourceItem.querySelector('.resource-originalname');
        
        fileInput.onchange = function() {
          if (fileInput.files.length > 0) {
            const file = fileInput.files[0];
            const formData = new FormData();
            formData.append('resource', file);
            
            // Show file info immediately
            fileNameSpan.textContent = file.name;
            fileSizeSpan.textContent = `(${(file.size / 1024 / 1024).toFixed(2)} MB)`;
            previewDiv.style.display = 'block';
            
            // Upload file
            fetch(`/admin-page/courses/upload-resource`, {
              method: 'POST',
              body: formData
            }).then(res => res.json())
              .then(data => {
                if (data.success) {
                  urlInput.value = data.url;
                  filenameInput.value = data.fileName;
                  filesizeInput.value = file.size;
                  filetypeInput.value = file.type;
                  originalnameInput.value = file.name;
                  
                  // Update preview with success indicator
                  fileNameSpan.innerHTML = `<i class="fas fa-check-circle" style="color: #4CAF50;"></i> ${file.name}`;
                } else {
                  fileNameSpan.innerHTML = `<i class="fas fa-exclamation-circle" style="color: #f44336;"></i> ${file.name} - Upload failed`;
                }
              })
              .catch(() => {
                fileNameSpan.innerHTML = `<i class="fas fa-exclamation-circle" style="color: #f44336;"></i> ${file.name} - Upload failed`;
              });
          }
        };
        
        resourceItemCount++;
      });

      // Initialize Quill editor
      var quill = new Quill('#quill-editor', {
        theme: 'snow',
        placeholder: 'Write your course contents here...',
        modules: {
          toolbar: [
            [{ 'header': [1, 2, 3, false] }],
            ['bold', 'italic', 'underline', 'strike'],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            [{ 'color': [] }, { 'background': [] }],
            ['link', 'image'],
            ['clean']
          ]
        }
      });

      // Custom link handler to ensure proper URL formatting
      const toolbar = quill.getModule('toolbar');
      toolbar.addHandler('link', function(value) {
        if (value) {
          let url = prompt('Enter URL:');
          if (url) {
            // Add protocol if missing
            if (!url.match(/^https?:\/\//)) {
              url = 'https://' + url;
            }
            const range = quill.getSelection();
            if (range) {
              quill.format('link', url);
            }
          }
        } else {
          quill.format('link', false);
        }
      });

      // On form submit, set the hidden input value to the Quill HTML
      document.querySelector('form').addEventListener('submit', function(e) {
        document.getElementById('courseContents').value = quill.root.innerHTML;
      });
    </script>
  </body>
</html>
